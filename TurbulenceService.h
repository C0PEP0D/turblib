/* TurbulenceService.h
   Generated by wsdl2h 2.8.16 from http://test.turbulence.pha.jhu.edu/service/turbulence.asmx?WSDL and typemap.dat
   2019-07-08 22:09:49 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on TurbulenceService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

turb1 = "http://turbulence.pha.jhu.edu/"

*/

#define SOAP_NAMESPACE_OF_turb1	"http://turbulence.pha.jhu.edu/"
//gsoap turb1 schema namespace:	http://turbulence.pha.jhu.edu/
//gsoap turb1 schema elementForm:	qualified
//gsoap turb1 schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/// "http://turbulence.pha.jhu.edu/":SpatialInterpolation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'turb1__SpatialInterpolation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum turb1__SpatialInterpolation
{
	turb1__SpatialInterpolation__None,	///< xs:string value="None"
	turb1__SpatialInterpolation__None_USCOREFd4,	///< xs:string value="None_Fd4"
	turb1__SpatialInterpolation__None_USCOREFd6,	///< xs:string value="None_Fd6"
	turb1__SpatialInterpolation__None_USCOREFd8,	///< xs:string value="None_Fd8"
	turb1__SpatialInterpolation__Fd4Lag4,	///< xs:string value="Fd4Lag4"
	turb1__SpatialInterpolation__Lag4,	///< xs:string value="Lag4"
	turb1__SpatialInterpolation__Lag6,	///< xs:string value="Lag6"
	turb1__SpatialInterpolation__Lag8,	///< xs:string value="Lag8"
	turb1__SpatialInterpolation__M1Q4,	///< xs:string value="M1Q4"
	turb1__SpatialInterpolation__M2Q4,	///< xs:string value="M2Q4"
	turb1__SpatialInterpolation__M3Q4,	///< xs:string value="M3Q4"
	turb1__SpatialInterpolation__M4Q4,	///< xs:string value="M4Q4"
	turb1__SpatialInterpolation__M1Q6,	///< xs:string value="M1Q6"
	turb1__SpatialInterpolation__M2Q6,	///< xs:string value="M2Q6"
	turb1__SpatialInterpolation__M3Q6,	///< xs:string value="M3Q6"
	turb1__SpatialInterpolation__M4Q6,	///< xs:string value="M4Q6"
	turb1__SpatialInterpolation__M1Q8,	///< xs:string value="M1Q8"
	turb1__SpatialInterpolation__M2Q8,	///< xs:string value="M2Q8"
	turb1__SpatialInterpolation__M3Q8,	///< xs:string value="M3Q8"
	turb1__SpatialInterpolation__M4Q8,	///< xs:string value="M4Q8"
	turb1__SpatialInterpolation__M1Q10,	///< xs:string value="M1Q10"
	turb1__SpatialInterpolation__M2Q10,	///< xs:string value="M2Q10"
	turb1__SpatialInterpolation__M3Q10,	///< xs:string value="M3Q10"
	turb1__SpatialInterpolation__M4Q10,	///< xs:string value="M4Q10"
	turb1__SpatialInterpolation__M1Q12,	///< xs:string value="M1Q12"
	turb1__SpatialInterpolation__M2Q12,	///< xs:string value="M2Q12"
	turb1__SpatialInterpolation__M3Q12,	///< xs:string value="M3Q12"
	turb1__SpatialInterpolation__M4Q12,	///< xs:string value="M4Q12"
	turb1__SpatialInterpolation__M1Q14,	///< xs:string value="M1Q14"
	turb1__SpatialInterpolation__M2Q14,	///< xs:string value="M2Q14"
	turb1__SpatialInterpolation__M3Q14,	///< xs:string value="M3Q14"
	turb1__SpatialInterpolation__M4Q14,	///< xs:string value="M4Q14"
};

/// "http://turbulence.pha.jhu.edu/":TemporalInterpolation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'turb1__TemporalInterpolation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum turb1__TemporalInterpolation
{
	turb1__TemporalInterpolation__None,	///< xs:string value="None"
	turb1__TemporalInterpolation__PCHIP,	///< xs:string value="PCHIP"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/// "http://turbulence.pha.jhu.edu/":ArrayOfPoint3 is a complexType.
struct turb1__ArrayOfPoint3
{
/// Size of array of struct turb1__Point3* is 0..unbounded
   $int                                  __sizePoint3                   0;
/// Array struct turb1__Point3* of length 0..unbounded
    struct turb1__Point3*                Point3                         0;
};

/// "http://turbulence.pha.jhu.edu/":Point3 is a complexType.
struct turb1__Point3
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVector3 is a complexType.
struct turb1__ArrayOfVector3
{
/// Size of array of struct turb1__Vector3* is 0..unbounded
   $int                                  __sizeVector3                  0;
/// Array struct turb1__Vector3* of length 0..unbounded
    struct turb1__Vector3*               Vector3                        0;
};

/// "http://turbulence.pha.jhu.edu/":Vector3 is a complexType.
struct turb1__Vector3
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfPressure is a complexType.
struct turb1__ArrayOfPressure
{
/// Size of array of struct turb1__Pressure* is 0..unbounded
   $int                                  __sizePressure                 0;
/// Array struct turb1__Pressure* of length 0..unbounded
    struct turb1__Pressure*              Pressure                       0;
};

/// "http://turbulence.pha.jhu.edu/":Pressure is a complexType.
struct turb1__Pressure
{
/// Element p of type xs:float.
    float                                p                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVector3P is a complexType.
struct turb1__ArrayOfVector3P
{
/// Size of array of struct turb1__Vector3P* is 0..unbounded
   $int                                  __sizeVector3P                 0;
/// Array struct turb1__Vector3P* of length 0..unbounded
    struct turb1__Vector3P*              Vector3P                       0;
};

/// "http://turbulence.pha.jhu.edu/":Vector3P is a complexType.
struct turb1__Vector3P
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
/// Element p of type xs:float.
    float                                p                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient is a complexType.
struct turb1__ArrayOfVelocityGradient
{
/// Size of array of struct turb1__VelocityGradient* is 0..unbounded
   $int                                  __sizeVelocityGradient         0;
/// Array struct turb1__VelocityGradient* of length 0..unbounded
    struct turb1__VelocityGradient*      VelocityGradient               0;
};

/// "http://turbulence.pha.jhu.edu/":VelocityGradient is a complexType.
struct turb1__VelocityGradient
{
/// Element duxdx of type xs:float.
    float                                duxdx                          1;	///< Required element.
/// Element duxdy of type xs:float.
    float                                duxdy                          1;	///< Required element.
/// Element duxdz of type xs:float.
    float                                duxdz                          1;	///< Required element.
/// Element duydx of type xs:float.
    float                                duydx                          1;	///< Required element.
/// Element duydy of type xs:float.
    float                                duydy                          1;	///< Required element.
/// Element duydz of type xs:float.
    float                                duydz                          1;	///< Required element.
/// Element duzdx of type xs:float.
    float                                duzdx                          1;	///< Required element.
/// Element duzdy of type xs:float.
    float                                duzdy                          1;	///< Required element.
/// Element duzdz of type xs:float.
    float                                duzdz                          1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian is a complexType.
struct turb1__ArrayOfVelocityHessian
{
/// Size of array of struct turb1__VelocityHessian* is 0..unbounded
   $int                                  __sizeVelocityHessian          0;
/// Array struct turb1__VelocityHessian* of length 0..unbounded
    struct turb1__VelocityHessian*       VelocityHessian                0;
};

/// "http://turbulence.pha.jhu.edu/":VelocityHessian is a complexType.
struct turb1__VelocityHessian
{
/// Element d2uxdxdx of type xs:float.
    float                                d2uxdxdx                       1;	///< Required element.
/// Element d2uxdxdy of type xs:float.
    float                                d2uxdxdy                       1;	///< Required element.
/// Element d2uxdxdz of type xs:float.
    float                                d2uxdxdz                       1;	///< Required element.
/// Element d2uxdydy of type xs:float.
    float                                d2uxdydy                       1;	///< Required element.
/// Element d2uxdydz of type xs:float.
    float                                d2uxdydz                       1;	///< Required element.
/// Element d2uxdzdz of type xs:float.
    float                                d2uxdzdz                       1;	///< Required element.
/// Element d2uydxdx of type xs:float.
    float                                d2uydxdx                       1;	///< Required element.
/// Element d2uydxdy of type xs:float.
    float                                d2uydxdy                       1;	///< Required element.
/// Element d2uydxdz of type xs:float.
    float                                d2uydxdz                       1;	///< Required element.
/// Element d2uydydy of type xs:float.
    float                                d2uydydy                       1;	///< Required element.
/// Element d2uydydz of type xs:float.
    float                                d2uydydz                       1;	///< Required element.
/// Element d2uydzdz of type xs:float.
    float                                d2uydzdz                       1;	///< Required element.
/// Element d2uzdxdx of type xs:float.
    float                                d2uzdxdx                       1;	///< Required element.
/// Element d2uzdxdy of type xs:float.
    float                                d2uzdxdy                       1;	///< Required element.
/// Element d2uzdxdz of type xs:float.
    float                                d2uzdxdz                       1;	///< Required element.
/// Element d2uzdydy of type xs:float.
    float                                d2uzdydy                       1;	///< Required element.
/// Element d2uzdydz of type xs:float.
    float                                d2uzdydz                       1;	///< Required element.
/// Element d2uzdzdz of type xs:float.
    float                                d2uzdzdz                       1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian is a complexType.
struct turb1__ArrayOfPressureHessian
{
/// Size of array of struct turb1__PressureHessian* is 0..unbounded
   $int                                  __sizePressureHessian          0;
/// Array struct turb1__PressureHessian* of length 0..unbounded
    struct turb1__PressureHessian*       PressureHessian                0;
};

/// "http://turbulence.pha.jhu.edu/":PressureHessian is a complexType.
struct turb1__PressureHessian
{
/// Element d2pdxdx of type xs:float.
    float                                d2pdxdx                        1;	///< Required element.
/// Element d2pdxdy of type xs:float.
    float                                d2pdxdy                        1;	///< Required element.
/// Element d2pdxdz of type xs:float.
    float                                d2pdxdz                        1;	///< Required element.
/// Element d2pdydy of type xs:float.
    float                                d2pdydy                        1;	///< Required element.
/// Element d2pdydz of type xs:float.
    float                                d2pdydz                        1;	///< Required element.
/// Element d2pdzdz of type xs:float.
    float                                d2pdzdz                        1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfThresholdInfo is a complexType.
struct turb1__ArrayOfThresholdInfo
{
/// Size of array of struct turb1__ThresholdInfo* is 0..unbounded
   $int                                  __sizeThresholdInfo            0;
/// Array struct turb1__ThresholdInfo* of length 0..unbounded
    struct turb1__ThresholdInfo*         ThresholdInfo                  0;
};

/// "http://turbulence.pha.jhu.edu/":ThresholdInfo is a complexType.
struct turb1__ThresholdInfo
{
/// Element x of type xs:int.
    int                                  x                              1;	///< Required element.
/// Element y of type xs:int.
    int                                  y                              1;	///< Required element.
/// Element z of type xs:int.
    int                                  z                              1;	///< Required element.
/// Element value of type xs:float.
    float                                value                          1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfSGSTensor is a complexType.
struct turb1__ArrayOfSGSTensor
{
/// Size of array of struct turb1__SGSTensor* is 0..unbounded
   $int                                  __sizeSGSTensor                0;
/// Array struct turb1__SGSTensor* of length 0..unbounded
    struct turb1__SGSTensor*             SGSTensor                      0;
};

/// "http://turbulence.pha.jhu.edu/":SGSTensor is a complexType.
struct turb1__SGSTensor
{
/// Element xx of type xs:float.
    float                                xx                             1;	///< Required element.
/// Element yy of type xs:float.
    float                                yy                             1;	///< Required element.
/// Element zz of type xs:float.
    float                                zz                             1;	///< Required element.
/// Element xy of type xs:float.
    float                                xy                             1;	///< Required element.
/// Element xz of type xs:float.
    float                                xz                             1;	///< Required element.
/// Element yz of type xs:float.
    float                                yz                             1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfFloat is a complexType.
struct turb1__ArrayOfFloat
{
/// Size of array of float* is 0..unbounded
   $int                                  __sizefloat_                   0;
/// Array float* of length 0..unbounded
    float*                               float_                         0;
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":NullOp

/// "http://turbulence.pha.jhu.edu/":NullOp is a complexType.
struct _turb1__NullOp
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":NullOpResponse

/// "http://turbulence.pha.jhu.edu/":NullOpResponse is a complexType.
struct _turb1__NullOpResponse
{
/// Element NullOpResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        NullOpResult                   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocity

/// "http://turbulence.pha.jhu.edu/":GetVelocity is a complexType.
struct _turb1__GetVelocity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityResponse is a complexType.
struct _turb1__GetVelocityResponse
{
/// Element GetVelocityResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticField

/// "http://turbulence.pha.jhu.edu/":GetMagneticField is a complexType.
struct _turb1__GetMagneticField
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldResponse is a complexType.
struct _turb1__GetMagneticFieldResponse
{
/// Element GetMagneticFieldResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetMagneticFieldResult         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotential

/// "http://turbulence.pha.jhu.edu/":GetVectorPotential is a complexType.
struct _turb1__GetVectorPotential
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialResponse is a complexType.
struct _turb1__GetVectorPotentialResponse
{
/// Element GetVectorPotentialResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVectorPotentialResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressure

/// "http://turbulence.pha.jhu.edu/":GetPressure is a complexType.
struct _turb1__GetPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureResponse is a complexType.
struct _turb1__GetPressureResponse
{
/// Element GetPressureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressure.
    struct turb1__ArrayOfPressure*       GetPressureResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensity

/// "http://turbulence.pha.jhu.edu/":GetDensity is a complexType.
struct _turb1__GetDensity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityResponse is a complexType.
struct _turb1__GetDensityResponse
{
/// Element GetDensityResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressure.
    struct turb1__ArrayOfPressure*       GetDensityResult               0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperature

/// "http://turbulence.pha.jhu.edu/":GetTemperature is a complexType.
struct _turb1__GetTemperature
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperatureResponse

/// "http://turbulence.pha.jhu.edu/":GetTemperatureResponse is a complexType.
struct _turb1__GetTemperatureResponse
{
/// Element GetTemperatureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressure.
    struct turb1__ArrayOfPressure*       GetTemperatureResult           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndPressure

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndPressure is a complexType.
struct _turb1__GetVelocityAndPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndPressureResponse is a complexType.
struct _turb1__GetVelocityAndPressureResponse
{
/// Element GetVelocityAndPressureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3P.
    struct turb1__ArrayOfVector3P*       GetVelocityAndPressureResult   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndTemperature

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndTemperature is a complexType.
struct _turb1__GetVelocityAndTemperature
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndTemperatureResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndTemperatureResponse is a complexType.
struct _turb1__GetVelocityAndTemperatureResponse
{
/// Element GetVelocityAndTemperatureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3P.
    struct turb1__ArrayOfVector3P*       GetVelocityAndTemperatureResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityGradient

/// "http://turbulence.pha.jhu.edu/":GetVelocityGradient is a complexType.
struct _turb1__GetVelocityGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityGradientResponse is a complexType.
struct _turb1__GetVelocityGradientResponse
{
/// Element GetVelocityGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetVelocityGradientResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradient

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradient is a complexType.
struct _turb1__GetMagneticFieldGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradientResponse is a complexType.
struct _turb1__GetMagneticFieldGradientResponse
{
/// Element GetMagneticFieldGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetMagneticFieldGradientResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradient

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradient is a complexType.
struct _turb1__GetVectorPotentialGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradientResponse is a complexType.
struct _turb1__GetVectorPotentialGradientResponse
{
/// Element GetVectorPotentialGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetVectorPotentialGradientResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureGradient

/// "http://turbulence.pha.jhu.edu/":GetPressureGradient is a complexType.
struct _turb1__GetPressureGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureGradientResponse is a complexType.
struct _turb1__GetPressureGradientResponse
{
/// Element GetPressureGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetPressureGradientResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityGradient

/// "http://turbulence.pha.jhu.edu/":GetDensityGradient is a complexType.
struct _turb1__GetDensityGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityGradientResponse is a complexType.
struct _turb1__GetDensityGradientResponse
{
/// Element GetDensityGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetDensityGradientResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperatureGradient

/// "http://turbulence.pha.jhu.edu/":GetTemperatureGradient is a complexType.
struct _turb1__GetTemperatureGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperatureGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetTemperatureGradientResponse is a complexType.
struct _turb1__GetTemperatureGradientResponse
{
/// Element GetTemperatureGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetTemperatureGradientResult   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityHessian

/// "http://turbulence.pha.jhu.edu/":GetVelocityHessian is a complexType.
struct _turb1__GetVelocityHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityHessianResponse is a complexType.
struct _turb1__GetVelocityHessianResponse
{
/// Element GetVelocityHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetVelocityHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticHessian

/// "http://turbulence.pha.jhu.edu/":GetMagneticHessian is a complexType.
struct _turb1__GetMagneticHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticHessianResponse is a complexType.
struct _turb1__GetMagneticHessianResponse
{
/// Element GetMagneticHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetMagneticHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessian

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessian is a complexType.
struct _turb1__GetVectorPotentialHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessianResponse is a complexType.
struct _turb1__GetVectorPotentialHessianResponse
{
/// Element GetVectorPotentialHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetVectorPotentialHessianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureHessian

/// "http://turbulence.pha.jhu.edu/":GetPressureHessian is a complexType.
struct _turb1__GetPressureHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureHessianResponse is a complexType.
struct _turb1__GetPressureHessianResponse
{
/// Element GetPressureHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian.
    struct turb1__ArrayOfPressureHessian*  GetPressureHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityHessian

/// "http://turbulence.pha.jhu.edu/":GetDensityHessian is a complexType.
struct _turb1__GetDensityHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityHessianResponse is a complexType.
struct _turb1__GetDensityHessianResponse
{
/// Element GetDensityHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian.
    struct turb1__ArrayOfPressureHessian*  GetDensityHessianResult        0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperatureHessian

/// "http://turbulence.pha.jhu.edu/":GetTemperatureHessian is a complexType.
struct _turb1__GetTemperatureHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetTemperatureHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetTemperatureHessianResponse is a complexType.
struct _turb1__GetTemperatureHessianResponse
{
/// Element GetTemperatureHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian.
    struct turb1__ArrayOfPressureHessian*  GetTemperatureHessianResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityLaplacian

/// "http://turbulence.pha.jhu.edu/":GetVelocityLaplacian is a complexType.
struct _turb1__GetVelocityLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityLaplacianResponse is a complexType.
struct _turb1__GetVelocityLaplacianResponse
{
/// Element GetVelocityLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityLaplacianResult     0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacian

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacian is a complexType.
struct _turb1__GetMagneticFieldLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacianResponse is a complexType.
struct _turb1__GetMagneticFieldLaplacianResponse
{
/// Element GetMagneticFieldLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetMagneticFieldLaplacianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacian

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacian is a complexType.
struct _turb1__GetVectorPotentialLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacianResponse is a complexType.
struct _turb1__GetVectorPotentialLaplacianResponse
{
/// Element GetVectorPotentialLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVectorPotentialLaplacianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPosition

/// "http://turbulence.pha.jhu.edu/":GetPosition is a complexType.
struct _turb1__GetPosition
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element StartTime of type xs:float.
    float                                StartTime                      1;	///< Required element.
/// Element EndTime of type xs:float.
    float                                EndTime                        1;	///< Required element.
/// Element dt of type xs:float.
    float                                dt                             1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPositionResponse

/// "http://turbulence.pha.jhu.edu/":GetPositionResponse is a complexType.
struct _turb1__GetPositionResponse
{
/// Element GetPositionResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         GetPositionResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetThreshold

/// "http://turbulence.pha.jhu.edu/":GetThreshold is a complexType.
struct _turb1__GetThreshold
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element threshold of type xs:float.
    float                                threshold                      1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element x_start of type xs:int.
    int                                  x_USCOREstart                  1;	///< Required element.
/// Element y_start of type xs:int.
    int                                  y_USCOREstart                  1;	///< Required element.
/// Element z_start of type xs:int.
    int                                  z_USCOREstart                  1;	///< Required element.
/// Element x_end of type xs:int.
    int                                  x_USCOREend                    1;	///< Required element.
/// Element y_end of type xs:int.
    int                                  y_USCOREend                    1;	///< Required element.
/// Element z_end of type xs:int.
    int                                  z_USCOREend                    1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetThresholdResponse

/// "http://turbulence.pha.jhu.edu/":GetThresholdResponse is a complexType.
struct _turb1__GetThresholdResponse
{
/// Element GetThresholdResult of type "http://turbulence.pha.jhu.edu/":ArrayOfThresholdInfo.
    struct turb1__ArrayOfThresholdInfo*  GetThresholdResult             0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetForce

/// "http://turbulence.pha.jhu.edu/":GetForce is a complexType.
struct _turb1__GetForce
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetForceResponse

/// "http://turbulence.pha.jhu.edu/":GetForceResponse is a complexType.
struct _turb1__GetForceResponse
{
/// Element GetForceResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetForceResult                 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetInvariant

/// "http://turbulence.pha.jhu.edu/":GetInvariant is a complexType.
struct _turb1__GetInvariant
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetInvariantResponse

/// "http://turbulence.pha.jhu.edu/":GetInvariantResponse is a complexType.
struct _turb1__GetInvariantResponse
{
/// Element GetInvariantResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetInvariantResult             0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilter

/// "http://turbulence.pha.jhu.edu/":GetBoxFilter is a complexType.
struct _turb1__GetBoxFilter
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterResponse is a complexType.
struct _turb1__GetBoxFilterResponse
{
/// Element GetBoxFilterResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetBoxFilterResult             0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGS

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGS is a complexType.
struct _turb1__GetBoxFilterSGS
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSResponse is a complexType.
struct _turb1__GetBoxFilterSGSResponse
{
/// Element GetBoxFilterSGSResult of type "http://turbulence.pha.jhu.edu/":ArrayOfSGSTensor.
    struct turb1__ArrayOfSGSTensor*      GetBoxFilterSGSResult          0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSsymtensor

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSsymtensor is a complexType.
struct _turb1__GetBoxFilterSGSsymtensor
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSsymtensorResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSsymtensorResponse is a complexType.
struct _turb1__GetBoxFilterSGSsymtensorResponse
{
/// Element GetBoxFilterSGSsymtensorResult of type "http://turbulence.pha.jhu.edu/":ArrayOfSGSTensor.
    struct turb1__ArrayOfSGSTensor*      GetBoxFilterSGSsymtensorResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGStensor

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGStensor is a complexType.
struct _turb1__GetBoxFilterSGStensor
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGStensorResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGStensorResponse is a complexType.
struct _turb1__GetBoxFilterSGStensorResponse
{
/// Element GetBoxFilterSGStensorResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetBoxFilterSGStensorResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSvector

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSvector is a complexType.
struct _turb1__GetBoxFilterSGSvector
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSvectorResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSvectorResponse is a complexType.
struct _turb1__GetBoxFilterSGSvectorResponse
{
/// Element GetBoxFilterSGSvectorResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetBoxFilterSGSvectorResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSscalar

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSscalar is a complexType.
struct _turb1__GetBoxFilterSGSscalar
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSscalarResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSscalarResponse is a complexType.
struct _turb1__GetBoxFilterSGSscalarResponse
{
/// Element GetBoxFilterSGSscalarResult of type "http://turbulence.pha.jhu.edu/":ArrayOfFloat.
    struct turb1__ArrayOfFloat*          GetBoxFilterSGSscalarResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterGradient

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterGradient is a complexType.
struct _turb1__GetBoxFilterGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element spacing of type xs:float.
    float                                spacing                        1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterGradientResponse is a complexType.
struct _turb1__GetBoxFilterGradientResponse
{
/// Element GetBoxFilterGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetBoxFilterGradientResult     0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradient

/// "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradient is a complexType.
struct _turb1__GetLaplacianOfGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradientResponse is a complexType.
struct _turb1__GetLaplacianOfGradientResponse
{
/// Element GetLaplacianOfGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetLaplacianOfGradientResult   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityBatch

/// "http://turbulence.pha.jhu.edu/":GetVelocityBatch is a complexType.
struct _turb1__GetVelocityBatch
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityBatchResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityBatchResponse is a complexType.
struct _turb1__GetVelocityBatchResponse
{
/// Element GetVelocityBatchResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityBatchResult         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVelocity

/// "http://turbulence.pha.jhu.edu/":GetRawVelocity is a complexType.
struct _turb1__GetRawVelocity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVelocityResponse

/// "http://turbulence.pha.jhu.edu/":GetRawVelocityResponse is a complexType.
struct _turb1__GetRawVelocityResponse
{
/// Element GetRawVelocityResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawVelocityResult           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawMagneticField

/// "http://turbulence.pha.jhu.edu/":GetRawMagneticField is a complexType.
struct _turb1__GetRawMagneticField
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawMagneticFieldResponse

/// "http://turbulence.pha.jhu.edu/":GetRawMagneticFieldResponse is a complexType.
struct _turb1__GetRawMagneticFieldResponse
{
/// Element GetRawMagneticFieldResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawMagneticFieldResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVectorPotential

/// "http://turbulence.pha.jhu.edu/":GetRawVectorPotential is a complexType.
struct _turb1__GetRawVectorPotential
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVectorPotentialResponse

/// "http://turbulence.pha.jhu.edu/":GetRawVectorPotentialResponse is a complexType.
struct _turb1__GetRawVectorPotentialResponse
{
/// Element GetRawVectorPotentialResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawVectorPotentialResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawPressure

/// "http://turbulence.pha.jhu.edu/":GetRawPressure is a complexType.
struct _turb1__GetRawPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetRawPressureResponse is a complexType.
struct _turb1__GetRawPressureResponse
{
/// Element GetRawPressureResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawPressureResult           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawDensity

/// "http://turbulence.pha.jhu.edu/":GetRawDensity is a complexType.
struct _turb1__GetRawDensity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawDensityResponse

/// "http://turbulence.pha.jhu.edu/":GetRawDensityResponse is a complexType.
struct _turb1__GetRawDensityResponse
{
/// Element GetRawDensityResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawDensityResult            0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawTemperature

/// "http://turbulence.pha.jhu.edu/":GetRawTemperature is a complexType.
struct _turb1__GetRawTemperature
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawTemperatureResponse

/// "http://turbulence.pha.jhu.edu/":GetRawTemperatureResponse is a complexType.
struct _turb1__GetRawTemperatureResponse
{
/// Element GetRawTemperatureResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawTemperatureResult        0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetAnyCutoutWeb

/// "http://turbulence.pha.jhu.edu/":GetAnyCutoutWeb is a complexType.
struct _turb1__GetAnyCutoutWeb
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element T of type xs:int.
    int                                  T                              1;	///< Required element.
/// Element x_start of type xs:int.
    int                                  x_USCOREstart                  1;	///< Required element.
/// Element y_start of type xs:int.
    int                                  y_USCOREstart                  1;	///< Required element.
/// Element z_start of type xs:int.
    int                                  z_USCOREstart                  1;	///< Required element.
/// Element x_end of type xs:int.
    int                                  x_USCOREend                    1;	///< Required element.
/// Element y_end of type xs:int.
    int                                  y_USCOREend                    1;	///< Required element.
/// Element z_end of type xs:int.
    int                                  z_USCOREend                    1;	///< Required element.
/// Element x_step of type xs:int.
    int                                  x_USCOREstep                   1;	///< Required element.
/// Element y_step of type xs:int.
    int                                  y_USCOREstep                   1;	///< Required element.
/// Element z_step of type xs:int.
    int                                  z_USCOREstep                   1;	///< Required element.
/// Element filter_width of type xs:int.
    int                                  filter_USCOREwidth             1;	///< Required element.
/// Element addr of type xs:string.
    char*                                addr                           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetAnyCutoutWebResponse

/// "http://turbulence.pha.jhu.edu/":GetAnyCutoutWebResponse is a complexType.
struct _turb1__GetAnyCutoutWebResponse
{
/// Element GetAnyCutoutWebResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetAnyCutoutWebResult          0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap turb1 service name:	TurbulenceServiceSoap 
//gsoap turb1 service type:	TurbulenceServiceSoap 
//gsoap turb1 service port:	http://test.turbulence.pha.jhu.edu/service/turbulence.asmx 
//gsoap turb1 service namespace:	http://turbulence.pha.jhu.edu/ 
//gsoap turb1 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref TurbulenceServiceSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page TurbulenceServiceSoap Binding "TurbulenceServiceSoap"

@section TurbulenceServiceSoap_operations Operations of Binding  "TurbulenceServiceSoap"

  - @ref __turb1__NullOp

  - @ref __turb1__GetVelocity

  - @ref __turb1__GetMagneticField

  - @ref __turb1__GetVectorPotential

  - @ref __turb1__GetPressure

  - @ref __turb1__GetDensity

  - @ref __turb1__GetTemperature

  - @ref __turb1__GetVelocityAndPressure

  - @ref __turb1__GetVelocityAndTemperature

  - @ref __turb1__GetVelocityGradient

  - @ref __turb1__GetMagneticFieldGradient

  - @ref __turb1__GetVectorPotentialGradient

  - @ref __turb1__GetPressureGradient

  - @ref __turb1__GetDensityGradient

  - @ref __turb1__GetTemperatureGradient

  - @ref __turb1__GetVelocityHessian

  - @ref __turb1__GetMagneticHessian

  - @ref __turb1__GetVectorPotentialHessian

  - @ref __turb1__GetPressureHessian

  - @ref __turb1__GetDensityHessian

  - @ref __turb1__GetTemperatureHessian

  - @ref __turb1__GetVelocityLaplacian

  - @ref __turb1__GetMagneticFieldLaplacian

  - @ref __turb1__GetVectorPotentialLaplacian

  - @ref __turb1__GetPosition

  - @ref __turb1__GetThreshold

  - @ref __turb1__GetForce

  - @ref __turb1__GetInvariant

  - @ref __turb1__GetBoxFilter

  - @ref __turb1__GetBoxFilterSGS

  - @ref __turb1__GetBoxFilterSGSsymtensor

  - @ref __turb1__GetBoxFilterSGStensor

  - @ref __turb1__GetBoxFilterSGSvector

  - @ref __turb1__GetBoxFilterSGSscalar

  - @ref __turb1__GetBoxFilterGradient

  - @ref __turb1__GetLaplacianOfGradient

  - @ref __turb1__GetVelocityBatch

  - @ref __turb1__GetRawVelocity

  - @ref __turb1__GetRawMagneticField

  - @ref __turb1__GetRawVectorPotential

  - @ref __turb1__GetRawPressure

  - @ref __turb1__GetRawDensity

  - @ref __turb1__GetRawTemperature

  - @ref __turb1__GetAnyCutoutWeb

  - @ref __turb1__NullOp_

  - @ref __turb1__GetVelocity_

  - @ref __turb1__GetMagneticField_

  - @ref __turb1__GetVectorPotential_

  - @ref __turb1__GetPressure_

  - @ref __turb1__GetDensity_

  - @ref __turb1__GetTemperature_

  - @ref __turb1__GetVelocityAndPressure_

  - @ref __turb1__GetVelocityAndTemperature_

  - @ref __turb1__GetVelocityGradient_

  - @ref __turb1__GetMagneticFieldGradient_

  - @ref __turb1__GetVectorPotentialGradient_

  - @ref __turb1__GetPressureGradient_

  - @ref __turb1__GetDensityGradient_

  - @ref __turb1__GetTemperatureGradient_

  - @ref __turb1__GetVelocityHessian_

  - @ref __turb1__GetMagneticHessian_

  - @ref __turb1__GetVectorPotentialHessian_

  - @ref __turb1__GetPressureHessian_

  - @ref __turb1__GetDensityHessian_

  - @ref __turb1__GetTemperatureHessian_

  - @ref __turb1__GetVelocityLaplacian_

  - @ref __turb1__GetMagneticFieldLaplacian_

  - @ref __turb1__GetVectorPotentialLaplacian_

  - @ref __turb1__GetPosition_

  - @ref __turb1__GetThreshold_

  - @ref __turb1__GetForce_

  - @ref __turb1__GetInvariant_

  - @ref __turb1__GetBoxFilter_

  - @ref __turb1__GetBoxFilterSGS_

  - @ref __turb1__GetBoxFilterSGSsymtensor_

  - @ref __turb1__GetBoxFilterSGStensor_

  - @ref __turb1__GetBoxFilterSGSvector_

  - @ref __turb1__GetBoxFilterSGSscalar_

  - @ref __turb1__GetBoxFilterGradient_

  - @ref __turb1__GetLaplacianOfGradient_

  - @ref __turb1__GetVelocityBatch_

  - @ref __turb1__GetRawVelocity_

  - @ref __turb1__GetRawMagneticField_

  - @ref __turb1__GetRawVectorPotential_

  - @ref __turb1__GetRawPressure_

  - @ref __turb1__GetRawDensity_

  - @ref __turb1__GetRawTemperature_

  - @ref __turb1__GetAnyCutoutWeb_

@section TurbulenceServiceSoap_ports Endpoints of Binding  "TurbulenceServiceSoap"

  - http://test.turbulence.pha.jhu.edu/service/turbulence.asmx

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TurbulenceServiceSoap                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__NullOp                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__NullOp" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Perform a null operation -- for testing throughput

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing input action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing output action: "http://turbulence.pha.jhu.edu/NullOpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__NullOp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // output parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__NullOp(
    struct soap *soap,
    // input parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // output parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	NullOp SOAP
//gsoap turb1 service method-style:	NullOp document
//gsoap turb1 service method-encoding:	NullOp literal
//gsoap turb1 service method-input-action:	NullOp http://turbulence.pha.jhu.edu/NullOp
//gsoap turb1 service method-output-action:	NullOp http://turbulence.pha.jhu.edu/NullOpResponse
int __turb1__NullOp(
    struct _turb1__NullOp*              turb1__NullOp,	///< Input parameter
    struct _turb1__NullOpResponse*      turb1__NullOpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocity                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocity" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // output parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocity(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // output parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocity SOAP
//gsoap turb1 service method-style:	GetVelocity document
//gsoap turb1 service method-encoding:	GetVelocity literal
//gsoap turb1 service method-input-action:	GetVelocity http://turbulence.pha.jhu.edu/GetVelocity
//gsoap turb1 service method-output-action:	GetVelocity http://turbulence.pha.jhu.edu/GetVelocityResponse
int __turb1__GetVelocity(
    struct _turb1__GetVelocity*         turb1__GetVelocity,	///< Input parameter
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticField                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticField" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // output parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticField(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // output parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticField SOAP
//gsoap turb1 service method-style:	GetMagneticField document
//gsoap turb1 service method-encoding:	GetMagneticField literal
//gsoap turb1 service method-input-action:	GetMagneticField http://turbulence.pha.jhu.edu/GetMagneticField
//gsoap turb1 service method-output-action:	GetMagneticField http://turbulence.pha.jhu.edu/GetMagneticFieldResponse
int __turb1__GetMagneticField(
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,	///< Input parameter
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotential                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotential" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // output parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotential(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // output parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotential SOAP
//gsoap turb1 service method-style:	GetVectorPotential document
//gsoap turb1 service method-encoding:	GetVectorPotential literal
//gsoap turb1 service method-input-action:	GetVectorPotential http://turbulence.pha.jhu.edu/GetVectorPotential
//gsoap turb1 service method-output-action:	GetVectorPotential http://turbulence.pha.jhu.edu/GetVectorPotentialResponse
int __turb1__GetVectorPotential(
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,	///< Input parameter
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressure                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the pressure field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // output parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressure(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // output parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressure SOAP
//gsoap turb1 service method-style:	GetPressure document
//gsoap turb1 service method-encoding:	GetPressure literal
//gsoap turb1 service method-input-action:	GetPressure http://turbulence.pha.jhu.edu/GetPressure
//gsoap turb1 service method-output-action:	GetPressure http://turbulence.pha.jhu.edu/GetPressureResponse
int __turb1__GetPressure(
    struct _turb1__GetPressure*         turb1__GetPressure,	///< Input parameter
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensity                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensity" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the density field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // output parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensity(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // output parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensity SOAP
//gsoap turb1 service method-style:	GetDensity document
//gsoap turb1 service method-encoding:	GetDensity literal
//gsoap turb1 service method-input-action:	GetDensity http://turbulence.pha.jhu.edu/GetDensity
//gsoap turb1 service method-output-action:	GetDensity http://turbulence.pha.jhu.edu/GetDensityResponse
int __turb1__GetDensity(
    struct _turb1__GetDensity*          turb1__GetDensity,	///< Input parameter
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperature                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperature" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the temperature field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperature*      turb1__GetTemperature,
    // output parameters:
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperature(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperature*      turb1__GetTemperature,
    // output parameters:
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperature SOAP
//gsoap turb1 service method-style:	GetTemperature document
//gsoap turb1 service method-encoding:	GetTemperature literal
//gsoap turb1 service method-input-action:	GetTemperature http://turbulence.pha.jhu.edu/GetTemperature
//gsoap turb1 service method-output-action:	GetTemperature http://turbulence.pha.jhu.edu/GetTemperatureResponse
int __turb1__GetTemperature(
    struct _turb1__GetTemperature*      turb1__GetTemperature,	///< Input parameter
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityAndPressure                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityAndPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity and pressure for an array of points

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityAndPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // output parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityAndPressure(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // output parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityAndPressure SOAP
//gsoap turb1 service method-style:	GetVelocityAndPressure document
//gsoap turb1 service method-encoding:	GetVelocityAndPressure literal
//gsoap turb1 service method-input-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu/GetVelocityAndPressure
//gsoap turb1 service method-output-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu/GetVelocityAndPressureResponse
int __turb1__GetVelocityAndPressure(
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,	///< Input parameter
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityAndTemperature                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityAndTemperature" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity and temperature for an array of points

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityAndTemperature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,
    // output parameters:
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityAndTemperature(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,
    // output parameters:
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityAndTemperature SOAP
//gsoap turb1 service method-style:	GetVelocityAndTemperature document
//gsoap turb1 service method-encoding:	GetVelocityAndTemperature literal
//gsoap turb1 service method-input-action:	GetVelocityAndTemperature http://turbulence.pha.jhu.edu/GetVelocityAndTemperature
//gsoap turb1 service method-output-action:	GetVelocityAndTemperature http://turbulence.pha.jhu.edu/GetVelocityAndTemperatureResponse
int __turb1__GetVelocityAndTemperature(
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,	///< Input parameter
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // output parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // output parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityGradient SOAP
//gsoap turb1 service method-style:	GetVelocityGradient document
//gsoap turb1 service method-encoding:	GetVelocityGradient literal
//gsoap turb1 service method-input-action:	GetVelocityGradient http://turbulence.pha.jhu.edu/GetVelocityGradient
//gsoap turb1 service method-output-action:	GetVelocityGradient http://turbulence.pha.jhu.edu/GetVelocityGradientResponse
int __turb1__GetVelocityGradient(
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,	///< Input parameter
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticFieldGradient                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticFieldGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticFieldGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // output parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticFieldGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // output parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticFieldGradient SOAP
//gsoap turb1 service method-style:	GetMagneticFieldGradient document
//gsoap turb1 service method-encoding:	GetMagneticFieldGradient literal
//gsoap turb1 service method-input-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu/GetMagneticFieldGradient
//gsoap turb1 service method-output-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu/GetMagneticFieldGradientResponse
int __turb1__GetMagneticFieldGradient(
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,	///< Input parameter
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialGradient                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // output parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // output parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialGradient SOAP
//gsoap turb1 service method-style:	GetVectorPotentialGradient document
//gsoap turb1 service method-encoding:	GetVectorPotentialGradient literal
//gsoap turb1 service method-input-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu/GetVectorPotentialGradient
//gsoap turb1 service method-output-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu/GetVectorPotentialGradientResponse
int __turb1__GetVectorPotentialGradient(
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,	///< Input parameter
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressureGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressureGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the pressure gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressureGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // output parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressureGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // output parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressureGradient SOAP
//gsoap turb1 service method-style:	GetPressureGradient document
//gsoap turb1 service method-encoding:	GetPressureGradient literal
//gsoap turb1 service method-input-action:	GetPressureGradient http://turbulence.pha.jhu.edu/GetPressureGradient
//gsoap turb1 service method-output-action:	GetPressureGradient http://turbulence.pha.jhu.edu/GetPressureGradientResponse
int __turb1__GetPressureGradient(
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,	///< Input parameter
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensityGradient                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensityGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the density gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // output parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensityGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // output parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensityGradient SOAP
//gsoap turb1 service method-style:	GetDensityGradient document
//gsoap turb1 service method-encoding:	GetDensityGradient literal
//gsoap turb1 service method-input-action:	GetDensityGradient http://turbulence.pha.jhu.edu/GetDensityGradient
//gsoap turb1 service method-output-action:	GetDensityGradient http://turbulence.pha.jhu.edu/GetDensityGradientResponse
int __turb1__GetDensityGradient(
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,	///< Input parameter
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperatureGradient                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperatureGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the temperature gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperatureGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperatureGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperatureGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,
    // output parameters:
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperatureGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,
    // output parameters:
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperatureGradient SOAP
//gsoap turb1 service method-style:	GetTemperatureGradient document
//gsoap turb1 service method-encoding:	GetTemperatureGradient literal
//gsoap turb1 service method-input-action:	GetTemperatureGradient http://turbulence.pha.jhu.edu/GetTemperatureGradient
//gsoap turb1 service method-output-action:	GetTemperatureGradient http://turbulence.pha.jhu.edu/GetTemperatureGradientResponse
int __turb1__GetTemperatureGradient(
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,	///< Input parameter
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // output parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // output parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityHessian SOAP
//gsoap turb1 service method-style:	GetVelocityHessian document
//gsoap turb1 service method-encoding:	GetVelocityHessian literal
//gsoap turb1 service method-input-action:	GetVelocityHessian http://turbulence.pha.jhu.edu/GetVelocityHessian
//gsoap turb1 service method-output-action:	GetVelocityHessian http://turbulence.pha.jhu.edu/GetVelocityHessianResponse
int __turb1__GetVelocityHessian(
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,	///< Input parameter
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // output parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // output parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticHessian SOAP
//gsoap turb1 service method-style:	GetMagneticHessian document
//gsoap turb1 service method-encoding:	GetMagneticHessian literal
//gsoap turb1 service method-input-action:	GetMagneticHessian http://turbulence.pha.jhu.edu/GetMagneticHessian
//gsoap turb1 service method-output-action:	GetMagneticHessian http://turbulence.pha.jhu.edu/GetMagneticHessianResponse
int __turb1__GetMagneticHessian(
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,	///< Input parameter
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialHessian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // output parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // output parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialHessian SOAP
//gsoap turb1 service method-style:	GetVectorPotentialHessian document
//gsoap turb1 service method-encoding:	GetVectorPotentialHessian literal
//gsoap turb1 service method-input-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu/GetVectorPotentialHessian
//gsoap turb1 service method-output-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu/GetVectorPotentialHessianResponse
int __turb1__GetVectorPotentialHessian(
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,	///< Input parameter
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressureHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressureHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the pressure hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressureHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // output parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressureHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // output parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressureHessian SOAP
//gsoap turb1 service method-style:	GetPressureHessian document
//gsoap turb1 service method-encoding:	GetPressureHessian literal
//gsoap turb1 service method-input-action:	GetPressureHessian http://turbulence.pha.jhu.edu/GetPressureHessian
//gsoap turb1 service method-output-action:	GetPressureHessian http://turbulence.pha.jhu.edu/GetPressureHessianResponse
int __turb1__GetPressureHessian(
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,	///< Input parameter
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensityHessian                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensityHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the density hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // output parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensityHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // output parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensityHessian SOAP
//gsoap turb1 service method-style:	GetDensityHessian document
//gsoap turb1 service method-encoding:	GetDensityHessian literal
//gsoap turb1 service method-input-action:	GetDensityHessian http://turbulence.pha.jhu.edu/GetDensityHessian
//gsoap turb1 service method-output-action:	GetDensityHessian http://turbulence.pha.jhu.edu/GetDensityHessianResponse
int __turb1__GetDensityHessian(
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,	///< Input parameter
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperatureHessian                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperatureHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the temperature hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperatureHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperatureHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperatureHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,
    // output parameters:
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperatureHessian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,
    // output parameters:
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperatureHessian SOAP
//gsoap turb1 service method-style:	GetTemperatureHessian document
//gsoap turb1 service method-encoding:	GetTemperatureHessian literal
//gsoap turb1 service method-input-action:	GetTemperatureHessian http://turbulence.pha.jhu.edu/GetTemperatureHessian
//gsoap turb1 service method-output-action:	GetTemperatureHessian http://turbulence.pha.jhu.edu/GetTemperatureHessianResponse
int __turb1__GetTemperatureHessian(
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,	///< Input parameter
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityLaplacian                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity laplacian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // output parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityLaplacian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // output parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityLaplacian SOAP
//gsoap turb1 service method-style:	GetVelocityLaplacian document
//gsoap turb1 service method-encoding:	GetVelocityLaplacian literal
//gsoap turb1 service method-input-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu/GetVelocityLaplacian
//gsoap turb1 service method-output-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu/GetVelocityLaplacianResponse
int __turb1__GetVelocityLaplacian(
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,	///< Input parameter
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticFieldLaplacian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticFieldLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticFieldLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // output parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticFieldLaplacian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // output parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticFieldLaplacian SOAP
//gsoap turb1 service method-style:	GetMagneticFieldLaplacian document
//gsoap turb1 service method-encoding:	GetMagneticFieldLaplacian literal
//gsoap turb1 service method-input-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian
//gsoap turb1 service method-output-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacianResponse
int __turb1__GetMagneticFieldLaplacian(
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,	///< Input parameter
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialLaplacian                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // output parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialLaplacian(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // output parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialLaplacian SOAP
//gsoap turb1 service method-style:	GetVectorPotentialLaplacian document
//gsoap turb1 service method-encoding:	GetVectorPotentialLaplacian literal
//gsoap turb1 service method-input-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian
//gsoap turb1 service method-output-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacianResponse
int __turb1__GetVectorPotentialLaplacian(
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,	///< Input parameter
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPosition                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPosition" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Fluid particle tracking using a task parallel evaluation approach inside the database
engine.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // output parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPosition(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // output parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPosition SOAP
//gsoap turb1 service method-style:	GetPosition document
//gsoap turb1 service method-encoding:	GetPosition literal
//gsoap turb1 service method-input-action:	GetPosition http://turbulence.pha.jhu.edu/GetPosition
//gsoap turb1 service method-output-action:	GetPosition http://turbulence.pha.jhu.edu/GetPositionResponse
int __turb1__GetPosition(
    struct _turb1__GetPosition*         turb1__GetPosition,	///< Input parameter
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetThreshold                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetThreshold" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetThreshold of the specified field.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetThresholdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetThreshold(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // output parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetThreshold(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // output parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetThreshold SOAP
//gsoap turb1 service method-style:	GetThreshold document
//gsoap turb1 service method-encoding:	GetThreshold literal
//gsoap turb1 service method-input-action:	GetThreshold http://turbulence.pha.jhu.edu/GetThreshold
//gsoap turb1 service method-output-action:	GetThreshold http://turbulence.pha.jhu.edu/GetThresholdResponse
int __turb1__GetThreshold(
    struct _turb1__GetThreshold*        turb1__GetThreshold,	///< Input parameter
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetForce                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetForce" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the force for a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetForceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetForce(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // output parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetForce(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // output parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetForce SOAP
//gsoap turb1 service method-style:	GetForce document
//gsoap turb1 service method-encoding:	GetForce literal
//gsoap turb1 service method-input-action:	GetForce http://turbulence.pha.jhu.edu/GetForce
//gsoap turb1 service method-output-action:	GetForce http://turbulence.pha.jhu.edu/GetForceResponse
int __turb1__GetForce(
    struct _turb1__GetForce*            turb1__GetForce,	///< Input parameter
    struct _turb1__GetForceResponse*    turb1__GetForceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetInvariant                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetInvariant" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the invariants of velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetInvariant"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetInvariant"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetInvariantResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetInvariant(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetInvariant*        turb1__GetInvariant,
    // output parameters:
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetInvariant(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetInvariant*        turb1__GetInvariant,
    // output parameters:
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetInvariant SOAP
//gsoap turb1 service method-style:	GetInvariant document
//gsoap turb1 service method-encoding:	GetInvariant literal
//gsoap turb1 service method-input-action:	GetInvariant http://turbulence.pha.jhu.edu/GetInvariant
//gsoap turb1 service method-output-action:	GetInvariant http://turbulence.pha.jhu.edu/GetInvariantResponse
int __turb1__GetInvariant(
    struct _turb1__GetInvariant*        turb1__GetInvariant,	///< Input parameter
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilter                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilter" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // output parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilter(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // output parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilter SOAP
//gsoap turb1 service method-style:	GetBoxFilter document
//gsoap turb1 service method-encoding:	GetBoxFilter literal
//gsoap turb1 service method-input-action:	GetBoxFilter http://turbulence.pha.jhu.edu/GetBoxFilter
//gsoap turb1 service method-output-action:	GetBoxFilter http://turbulence.pha.jhu.edu/GetBoxFilterResponse
int __turb1__GetBoxFilter(
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,	///< Input parameter
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGS                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGS" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS symmetric tensor for a single vector field. Also, used
                            when two identical fields are specified (e.g. uu or
bb).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // output parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGS(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // output parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGS SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGS document
//gsoap turb1 service method-encoding:	GetBoxFilterSGS literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu/GetBoxFilterSGS
//gsoap turb1 service method-output-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu/GetBoxFilterSGSResponse
int __turb1__GetBoxFilterSGS(
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,	///< Input parameter
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSsymtensor                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSsymtensor" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS symmetric tensor for a single vector field. Also, used
                            when two identical fields are specified (e.g. uu or
bb).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSsymtensor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSsymtensor(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSsymtensor SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSsymtensor document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSsymtensor literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSsymtensor http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor
//gsoap turb1 service method-output-action:	GetBoxFilterSGSsymtensor http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensorResponse
int __turb1__GetBoxFilterSGSsymtensor(
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,	///< Input parameter
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGStensor                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGStensor" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS tensor for a combination of two vector fields(e.g. ub or ba).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGStensor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGStensor(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGStensor SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGStensor document
//gsoap turb1 service method-encoding:	GetBoxFilterSGStensor literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGStensor http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor
//gsoap turb1 service method-output-action:	GetBoxFilterSGStensor http://turbulence.pha.jhu.edu/GetBoxFilterSGStensorResponse
int __turb1__GetBoxFilterSGStensor(
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,	///< Input parameter
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSvector                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSvector" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS vector for a combination of a vector and a scalar field(e.g. up
or bp).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvectorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSvector(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,
    // output parameters:
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSvector(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,
    // output parameters:
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSvector SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSvector document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSvector literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSvector http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector
//gsoap turb1 service method-output-action:	GetBoxFilterSGSvector http://turbulence.pha.jhu.edu/GetBoxFilterSGSvectorResponse
int __turb1__GetBoxFilterSGSvector(
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,	///< Input parameter
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSscalar                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSscalar" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS scalar for a combination of two scalar fields(e.g. pp or pd).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalarResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSscalar(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,
    // output parameters:
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSscalar(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,
    // output parameters:
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSscalar SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSscalar document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSscalar literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSscalar http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar
//gsoap turb1 service method-output-action:	GetBoxFilterSGSscalar http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalarResponse
int __turb1__GetBoxFilterSGSscalar(
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,	///< Input parameter
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterGradient                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // output parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // output parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterGradient SOAP
//gsoap turb1 service method-style:	GetBoxFilterGradient document
//gsoap turb1 service method-encoding:	GetBoxFilterGradient literal
//gsoap turb1 service method-input-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu/GetBoxFilterGradient
//gsoap turb1 service method-output-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu/GetBoxFilterGradientResponse
int __turb1__GetBoxFilterGradient(
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,	///< Input parameter
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetLaplacianOfGradient                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetLaplacianOfGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetLaplacianOfGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // output parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetLaplacianOfGradient(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // output parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetLaplacianOfGradient SOAP
//gsoap turb1 service method-style:	GetLaplacianOfGradient document
//gsoap turb1 service method-encoding:	GetLaplacianOfGradient literal
//gsoap turb1 service method-input-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu/GetLaplacianOfGradient
//gsoap turb1 service method-output-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu/GetLaplacianOfGradientResponse
int __turb1__GetLaplacianOfGradient(
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,	///< Input parameter
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityBatch                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityBatch" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity at a number of points for a given time (allow
batching).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityBatchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityBatch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // output parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityBatch(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // output parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityBatch SOAP
//gsoap turb1 service method-style:	GetVelocityBatch document
//gsoap turb1 service method-encoding:	GetVelocityBatch literal
//gsoap turb1 service method-input-action:	GetVelocityBatch http://turbulence.pha.jhu.edu/GetVelocityBatch
//gsoap turb1 service method-output-action:	GetVelocityBatch http://turbulence.pha.jhu.edu/GetVelocityBatchResponse
int __turb1__GetVelocityBatch(
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,	///< Input parameter
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawVelocity                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawVelocity" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw velocity data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // output parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawVelocity(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // output parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawVelocity SOAP
//gsoap turb1 service method-style:	GetRawVelocity document
//gsoap turb1 service method-encoding:	GetRawVelocity literal
//gsoap turb1 service method-input-action:	GetRawVelocity http://turbulence.pha.jhu.edu/GetRawVelocity
//gsoap turb1 service method-output-action:	GetRawVelocity http://turbulence.pha.jhu.edu/GetRawVelocityResponse
int __turb1__GetRawVelocity(
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,	///< Input parameter
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawMagneticField                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawMagneticField" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw magnetic field data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // output parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawMagneticField(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // output parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawMagneticField SOAP
//gsoap turb1 service method-style:	GetRawMagneticField document
//gsoap turb1 service method-encoding:	GetRawMagneticField literal
//gsoap turb1 service method-input-action:	GetRawMagneticField http://turbulence.pha.jhu.edu/GetRawMagneticField
//gsoap turb1 service method-output-action:	GetRawMagneticField http://turbulence.pha.jhu.edu/GetRawMagneticFieldResponse
int __turb1__GetRawMagneticField(
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,	///< Input parameter
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawVectorPotential                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawVectorPotential" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw vector potential data with the given width cornered at the
specified coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // output parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawVectorPotential(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // output parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawVectorPotential SOAP
//gsoap turb1 service method-style:	GetRawVectorPotential document
//gsoap turb1 service method-encoding:	GetRawVectorPotential literal
//gsoap turb1 service method-input-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu/GetRawVectorPotential
//gsoap turb1 service method-output-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu/GetRawVectorPotentialResponse
int __turb1__GetRawVectorPotential(
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,	///< Input parameter
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawPressure                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw pressure data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // output parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawPressure(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // output parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawPressure SOAP
//gsoap turb1 service method-style:	GetRawPressure document
//gsoap turb1 service method-encoding:	GetRawPressure literal
//gsoap turb1 service method-input-action:	GetRawPressure http://turbulence.pha.jhu.edu/GetRawPressure
//gsoap turb1 service method-output-action:	GetRawPressure http://turbulence.pha.jhu.edu/GetRawPressureResponse
int __turb1__GetRawPressure(
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,	///< Input parameter
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawDensity                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawDensity" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // output parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawDensity(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // output parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawDensity SOAP
//gsoap turb1 service method-style:	GetRawDensity document
//gsoap turb1 service method-encoding:	GetRawDensity literal
//gsoap turb1 service method-input-action:	GetRawDensity http://turbulence.pha.jhu.edu/GetRawDensity
//gsoap turb1 service method-output-action:	GetRawDensity http://turbulence.pha.jhu.edu/GetRawDensityResponse
int __turb1__GetRawDensity(
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,	///< Input parameter
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawTemperature                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawTemperature" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawTemperature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,
    // output parameters:
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawTemperature(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,
    // output parameters:
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawTemperature SOAP
//gsoap turb1 service method-style:	GetRawTemperature document
//gsoap turb1 service method-encoding:	GetRawTemperature literal
//gsoap turb1 service method-input-action:	GetRawTemperature http://turbulence.pha.jhu.edu/GetRawTemperature
//gsoap turb1 service method-output-action:	GetRawTemperature http://turbulence.pha.jhu.edu/GetRawTemperatureResponse
int __turb1__GetRawTemperature(
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,	///< Input parameter
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetAnyCutoutWeb                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetAnyCutoutWeb" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWeb"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWeb"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWebResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetAnyCutoutWeb(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,
    // output parameters:
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetAnyCutoutWeb(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,
    // output parameters:
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetAnyCutoutWeb SOAP
//gsoap turb1 service method-style:	GetAnyCutoutWeb document
//gsoap turb1 service method-encoding:	GetAnyCutoutWeb literal
//gsoap turb1 service method-input-action:	GetAnyCutoutWeb http://turbulence.pha.jhu.edu/GetAnyCutoutWeb
//gsoap turb1 service method-output-action:	GetAnyCutoutWeb http://turbulence.pha.jhu.edu/GetAnyCutoutWebResponse
int __turb1__GetAnyCutoutWeb(
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,	///< Input parameter
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__NullOp_                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__NullOp_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Perform a null operation -- for testing throughput

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing input action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing output action: "http://turbulence.pha.jhu.edu/NullOpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__NullOp_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // output parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__NullOp_(
    struct soap *soap,
    // input parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // output parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	NullOp_ SOAP
//gsoap turb1 service method-style:	NullOp_ document
//gsoap turb1 service method-encoding:	NullOp_ literal
//gsoap turb1 service method-input-action:	NullOp_ http://turbulence.pha.jhu.edu/NullOp
//gsoap turb1 service method-output-action:	NullOp_ http://turbulence.pha.jhu.edu/NullOpResponse
int __turb1__NullOp_(
    struct _turb1__NullOp*              turb1__NullOp,	///< Input parameter
    struct _turb1__NullOpResponse*      turb1__NullOpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocity_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocity_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocity_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // output parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocity_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // output parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocity_ SOAP
//gsoap turb1 service method-style:	GetVelocity_ document
//gsoap turb1 service method-encoding:	GetVelocity_ literal
//gsoap turb1 service method-input-action:	GetVelocity_ http://turbulence.pha.jhu.edu/GetVelocity
//gsoap turb1 service method-output-action:	GetVelocity_ http://turbulence.pha.jhu.edu/GetVelocityResponse
int __turb1__GetVelocity_(
    struct _turb1__GetVelocity*         turb1__GetVelocity,	///< Input parameter
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticField_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticField_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticField_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // output parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticField_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // output parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticField_ SOAP
//gsoap turb1 service method-style:	GetMagneticField_ document
//gsoap turb1 service method-encoding:	GetMagneticField_ literal
//gsoap turb1 service method-input-action:	GetMagneticField_ http://turbulence.pha.jhu.edu/GetMagneticField
//gsoap turb1 service method-output-action:	GetMagneticField_ http://turbulence.pha.jhu.edu/GetMagneticFieldResponse
int __turb1__GetMagneticField_(
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,	///< Input parameter
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotential_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotential_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotential_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // output parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotential_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // output parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotential_ SOAP
//gsoap turb1 service method-style:	GetVectorPotential_ document
//gsoap turb1 service method-encoding:	GetVectorPotential_ literal
//gsoap turb1 service method-input-action:	GetVectorPotential_ http://turbulence.pha.jhu.edu/GetVectorPotential
//gsoap turb1 service method-output-action:	GetVectorPotential_ http://turbulence.pha.jhu.edu/GetVectorPotentialResponse
int __turb1__GetVectorPotential_(
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,	///< Input parameter
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressure_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressure_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the pressure field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressure_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // output parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressure_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // output parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressure_ SOAP
//gsoap turb1 service method-style:	GetPressure_ document
//gsoap turb1 service method-encoding:	GetPressure_ literal
//gsoap turb1 service method-input-action:	GetPressure_ http://turbulence.pha.jhu.edu/GetPressure
//gsoap turb1 service method-output-action:	GetPressure_ http://turbulence.pha.jhu.edu/GetPressureResponse
int __turb1__GetPressure_(
    struct _turb1__GetPressure*         turb1__GetPressure,	///< Input parameter
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensity_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensity_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the density field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensity_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // output parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensity_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // output parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensity_ SOAP
//gsoap turb1 service method-style:	GetDensity_ document
//gsoap turb1 service method-encoding:	GetDensity_ literal
//gsoap turb1 service method-input-action:	GetDensity_ http://turbulence.pha.jhu.edu/GetDensity
//gsoap turb1 service method-output-action:	GetDensity_ http://turbulence.pha.jhu.edu/GetDensityResponse
int __turb1__GetDensity_(
    struct _turb1__GetDensity*          turb1__GetDensity,	///< Input parameter
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperature_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperature_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the temperature field at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperature_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperature*      turb1__GetTemperature,
    // output parameters:
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperature_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperature*      turb1__GetTemperature,
    // output parameters:
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperature_ SOAP
//gsoap turb1 service method-style:	GetTemperature_ document
//gsoap turb1 service method-encoding:	GetTemperature_ literal
//gsoap turb1 service method-input-action:	GetTemperature_ http://turbulence.pha.jhu.edu/GetTemperature
//gsoap turb1 service method-output-action:	GetTemperature_ http://turbulence.pha.jhu.edu/GetTemperatureResponse
int __turb1__GetTemperature_(
    struct _turb1__GetTemperature*      turb1__GetTemperature,	///< Input parameter
    struct _turb1__GetTemperatureResponse* turb1__GetTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityAndPressure_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityAndPressure_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity and pressure for an array of points

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityAndPressure_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // output parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityAndPressure_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // output parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityAndPressure_ SOAP
//gsoap turb1 service method-style:	GetVelocityAndPressure_ document
//gsoap turb1 service method-encoding:	GetVelocityAndPressure_ literal
//gsoap turb1 service method-input-action:	GetVelocityAndPressure_ http://turbulence.pha.jhu.edu/GetVelocityAndPressure
//gsoap turb1 service method-output-action:	GetVelocityAndPressure_ http://turbulence.pha.jhu.edu/GetVelocityAndPressureResponse
int __turb1__GetVelocityAndPressure_(
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,	///< Input parameter
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityAndTemperature_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityAndTemperature_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity and temperature for an array of points

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityAndTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityAndTemperature_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,
    // output parameters:
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityAndTemperature_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,
    // output parameters:
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityAndTemperature_ SOAP
//gsoap turb1 service method-style:	GetVelocityAndTemperature_ document
//gsoap turb1 service method-encoding:	GetVelocityAndTemperature_ literal
//gsoap turb1 service method-input-action:	GetVelocityAndTemperature_ http://turbulence.pha.jhu.edu/GetVelocityAndTemperature
//gsoap turb1 service method-output-action:	GetVelocityAndTemperature_ http://turbulence.pha.jhu.edu/GetVelocityAndTemperatureResponse
int __turb1__GetVelocityAndTemperature_(
    struct _turb1__GetVelocityAndTemperature* turb1__GetVelocityAndTemperature,	///< Input parameter
    struct _turb1__GetVelocityAndTemperatureResponse* turb1__GetVelocityAndTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityGradient_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // output parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // output parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityGradient_ SOAP
//gsoap turb1 service method-style:	GetVelocityGradient_ document
//gsoap turb1 service method-encoding:	GetVelocityGradient_ literal
//gsoap turb1 service method-input-action:	GetVelocityGradient_ http://turbulence.pha.jhu.edu/GetVelocityGradient
//gsoap turb1 service method-output-action:	GetVelocityGradient_ http://turbulence.pha.jhu.edu/GetVelocityGradientResponse
int __turb1__GetVelocityGradient_(
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,	///< Input parameter
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticFieldGradient_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticFieldGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticFieldGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // output parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticFieldGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // output parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticFieldGradient_ SOAP
//gsoap turb1 service method-style:	GetMagneticFieldGradient_ document
//gsoap turb1 service method-encoding:	GetMagneticFieldGradient_ literal
//gsoap turb1 service method-input-action:	GetMagneticFieldGradient_ http://turbulence.pha.jhu.edu/GetMagneticFieldGradient
//gsoap turb1 service method-output-action:	GetMagneticFieldGradient_ http://turbulence.pha.jhu.edu/GetMagneticFieldGradientResponse
int __turb1__GetMagneticFieldGradient_(
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,	///< Input parameter
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialGradient_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // output parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // output parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialGradient_ SOAP
//gsoap turb1 service method-style:	GetVectorPotentialGradient_ document
//gsoap turb1 service method-encoding:	GetVectorPotentialGradient_ literal
//gsoap turb1 service method-input-action:	GetVectorPotentialGradient_ http://turbulence.pha.jhu.edu/GetVectorPotentialGradient
//gsoap turb1 service method-output-action:	GetVectorPotentialGradient_ http://turbulence.pha.jhu.edu/GetVectorPotentialGradientResponse
int __turb1__GetVectorPotentialGradient_(
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,	///< Input parameter
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressureGradient_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressureGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the pressure gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressureGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // output parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressureGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // output parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressureGradient_ SOAP
//gsoap turb1 service method-style:	GetPressureGradient_ document
//gsoap turb1 service method-encoding:	GetPressureGradient_ literal
//gsoap turb1 service method-input-action:	GetPressureGradient_ http://turbulence.pha.jhu.edu/GetPressureGradient
//gsoap turb1 service method-output-action:	GetPressureGradient_ http://turbulence.pha.jhu.edu/GetPressureGradientResponse
int __turb1__GetPressureGradient_(
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,	///< Input parameter
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensityGradient_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensityGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the density gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensityGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // output parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensityGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // output parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensityGradient_ SOAP
//gsoap turb1 service method-style:	GetDensityGradient_ document
//gsoap turb1 service method-encoding:	GetDensityGradient_ literal
//gsoap turb1 service method-input-action:	GetDensityGradient_ http://turbulence.pha.jhu.edu/GetDensityGradient
//gsoap turb1 service method-output-action:	GetDensityGradient_ http://turbulence.pha.jhu.edu/GetDensityGradientResponse
int __turb1__GetDensityGradient_(
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,	///< Input parameter
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperatureGradient_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperatureGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the temperature gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperatureGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperatureGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperatureGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,
    // output parameters:
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperatureGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,
    // output parameters:
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperatureGradient_ SOAP
//gsoap turb1 service method-style:	GetTemperatureGradient_ document
//gsoap turb1 service method-encoding:	GetTemperatureGradient_ literal
//gsoap turb1 service method-input-action:	GetTemperatureGradient_ http://turbulence.pha.jhu.edu/GetTemperatureGradient
//gsoap turb1 service method-output-action:	GetTemperatureGradient_ http://turbulence.pha.jhu.edu/GetTemperatureGradientResponse
int __turb1__GetTemperatureGradient_(
    struct _turb1__GetTemperatureGradient* turb1__GetTemperatureGradient,	///< Input parameter
    struct _turb1__GetTemperatureGradientResponse* turb1__GetTemperatureGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityHessian_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // output parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // output parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityHessian_ SOAP
//gsoap turb1 service method-style:	GetVelocityHessian_ document
//gsoap turb1 service method-encoding:	GetVelocityHessian_ literal
//gsoap turb1 service method-input-action:	GetVelocityHessian_ http://turbulence.pha.jhu.edu/GetVelocityHessian
//gsoap turb1 service method-output-action:	GetVelocityHessian_ http://turbulence.pha.jhu.edu/GetVelocityHessianResponse
int __turb1__GetVelocityHessian_(
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,	///< Input parameter
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticHessian_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // output parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // output parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticHessian_ SOAP
//gsoap turb1 service method-style:	GetMagneticHessian_ document
//gsoap turb1 service method-encoding:	GetMagneticHessian_ literal
//gsoap turb1 service method-input-action:	GetMagneticHessian_ http://turbulence.pha.jhu.edu/GetMagneticHessian
//gsoap turb1 service method-output-action:	GetMagneticHessian_ http://turbulence.pha.jhu.edu/GetMagneticHessianResponse
int __turb1__GetMagneticHessian_(
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,	///< Input parameter
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialHessian_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // output parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // output parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialHessian_ SOAP
//gsoap turb1 service method-style:	GetVectorPotentialHessian_ document
//gsoap turb1 service method-encoding:	GetVectorPotentialHessian_ literal
//gsoap turb1 service method-input-action:	GetVectorPotentialHessian_ http://turbulence.pha.jhu.edu/GetVectorPotentialHessian
//gsoap turb1 service method-output-action:	GetVectorPotentialHessian_ http://turbulence.pha.jhu.edu/GetVectorPotentialHessianResponse
int __turb1__GetVectorPotentialHessian_(
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,	///< Input parameter
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPressureHessian_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPressureHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the pressure hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPressureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPressureHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // output parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPressureHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // output parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPressureHessian_ SOAP
//gsoap turb1 service method-style:	GetPressureHessian_ document
//gsoap turb1 service method-encoding:	GetPressureHessian_ literal
//gsoap turb1 service method-input-action:	GetPressureHessian_ http://turbulence.pha.jhu.edu/GetPressureHessian
//gsoap turb1 service method-output-action:	GetPressureHessian_ http://turbulence.pha.jhu.edu/GetPressureHessianResponse
int __turb1__GetPressureHessian_(
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,	///< Input parameter
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetDensityHessian_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetDensityHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the density hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetDensityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetDensityHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // output parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetDensityHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // output parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetDensityHessian_ SOAP
//gsoap turb1 service method-style:	GetDensityHessian_ document
//gsoap turb1 service method-encoding:	GetDensityHessian_ literal
//gsoap turb1 service method-input-action:	GetDensityHessian_ http://turbulence.pha.jhu.edu/GetDensityHessian
//gsoap turb1 service method-output-action:	GetDensityHessian_ http://turbulence.pha.jhu.edu/GetDensityHessianResponse
int __turb1__GetDensityHessian_(
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,	///< Input parameter
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetTemperatureHessian_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetTemperatureHessian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the temperature hessian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetTemperatureHessian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetTemperatureHessian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetTemperatureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetTemperatureHessian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,
    // output parameters:
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetTemperatureHessian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,
    // output parameters:
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetTemperatureHessian_ SOAP
//gsoap turb1 service method-style:	GetTemperatureHessian_ document
//gsoap turb1 service method-encoding:	GetTemperatureHessian_ literal
//gsoap turb1 service method-input-action:	GetTemperatureHessian_ http://turbulence.pha.jhu.edu/GetTemperatureHessian
//gsoap turb1 service method-output-action:	GetTemperatureHessian_ http://turbulence.pha.jhu.edu/GetTemperatureHessianResponse
int __turb1__GetTemperatureHessian_(
    struct _turb1__GetTemperatureHessian* turb1__GetTemperatureHessian,	///< Input parameter
    struct _turb1__GetTemperatureHessianResponse* turb1__GetTemperatureHessianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityLaplacian_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityLaplacian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the velocity laplacian at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityLaplacian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // output parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityLaplacian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // output parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityLaplacian_ SOAP
//gsoap turb1 service method-style:	GetVelocityLaplacian_ document
//gsoap turb1 service method-encoding:	GetVelocityLaplacian_ literal
//gsoap turb1 service method-input-action:	GetVelocityLaplacian_ http://turbulence.pha.jhu.edu/GetVelocityLaplacian
//gsoap turb1 service method-output-action:	GetVelocityLaplacian_ http://turbulence.pha.jhu.edu/GetVelocityLaplacianResponse
int __turb1__GetVelocityLaplacian_(
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,	///< Input parameter
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetMagneticFieldLaplacian_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetMagneticFieldLaplacian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the magnetic field Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetMagneticFieldLaplacian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // output parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetMagneticFieldLaplacian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // output parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetMagneticFieldLaplacian_ SOAP
//gsoap turb1 service method-style:	GetMagneticFieldLaplacian_ document
//gsoap turb1 service method-encoding:	GetMagneticFieldLaplacian_ literal
//gsoap turb1 service method-input-action:	GetMagneticFieldLaplacian_ http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian
//gsoap turb1 service method-output-action:	GetMagneticFieldLaplacian_ http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacianResponse
int __turb1__GetMagneticFieldLaplacian_(
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,	///< Input parameter
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVectorPotentialLaplacian_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVectorPotentialLaplacian_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the vector potential Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVectorPotentialLaplacian_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // output parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVectorPotentialLaplacian_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // output parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVectorPotentialLaplacian_ SOAP
//gsoap turb1 service method-style:	GetVectorPotentialLaplacian_ document
//gsoap turb1 service method-encoding:	GetVectorPotentialLaplacian_ literal
//gsoap turb1 service method-input-action:	GetVectorPotentialLaplacian_ http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian
//gsoap turb1 service method-output-action:	GetVectorPotentialLaplacian_ http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacianResponse
int __turb1__GetVectorPotentialLaplacian_(
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,	///< Input parameter
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetPosition_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetPosition_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Fluid particle tracking using a task parallel evaluation approach inside the database
engine.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetPosition_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // output parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetPosition_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // output parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetPosition_ SOAP
//gsoap turb1 service method-style:	GetPosition_ document
//gsoap turb1 service method-encoding:	GetPosition_ literal
//gsoap turb1 service method-input-action:	GetPosition_ http://turbulence.pha.jhu.edu/GetPosition
//gsoap turb1 service method-output-action:	GetPosition_ http://turbulence.pha.jhu.edu/GetPositionResponse
int __turb1__GetPosition_(
    struct _turb1__GetPosition*         turb1__GetPosition,	///< Input parameter
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetThreshold_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetThreshold_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetThreshold of the specified field.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetThresholdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetThreshold_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // output parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetThreshold_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // output parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetThreshold_ SOAP
//gsoap turb1 service method-style:	GetThreshold_ document
//gsoap turb1 service method-encoding:	GetThreshold_ literal
//gsoap turb1 service method-input-action:	GetThreshold_ http://turbulence.pha.jhu.edu/GetThreshold
//gsoap turb1 service method-output-action:	GetThreshold_ http://turbulence.pha.jhu.edu/GetThresholdResponse
int __turb1__GetThreshold_(
    struct _turb1__GetThreshold*        turb1__GetThreshold,	///< Input parameter
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetForce_                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetForce_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the force for a number of points for a given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetForceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetForce_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // output parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetForce_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // output parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetForce_ SOAP
//gsoap turb1 service method-style:	GetForce_ document
//gsoap turb1 service method-encoding:	GetForce_ literal
//gsoap turb1 service method-input-action:	GetForce_ http://turbulence.pha.jhu.edu/GetForce
//gsoap turb1 service method-output-action:	GetForce_ http://turbulence.pha.jhu.edu/GetForceResponse
int __turb1__GetForce_(
    struct _turb1__GetForce*            turb1__GetForce,	///< Input parameter
    struct _turb1__GetForceResponse*    turb1__GetForceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetInvariant_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetInvariant_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the invariants of velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetInvariant"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetInvariant"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetInvariantResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetInvariant_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetInvariant*        turb1__GetInvariant,
    // output parameters:
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetInvariant_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetInvariant*        turb1__GetInvariant,
    // output parameters:
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetInvariant_ SOAP
//gsoap turb1 service method-style:	GetInvariant_ document
//gsoap turb1 service method-encoding:	GetInvariant_ literal
//gsoap turb1 service method-input-action:	GetInvariant_ http://turbulence.pha.jhu.edu/GetInvariant
//gsoap turb1 service method-output-action:	GetInvariant_ http://turbulence.pha.jhu.edu/GetInvariantResponse
int __turb1__GetInvariant_(
    struct _turb1__GetInvariant*        turb1__GetInvariant,	///< Input parameter
    struct _turb1__GetInvariantResponse* turb1__GetInvariantResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilter_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilter_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilter_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // output parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilter_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // output parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilter_ SOAP
//gsoap turb1 service method-style:	GetBoxFilter_ document
//gsoap turb1 service method-encoding:	GetBoxFilter_ literal
//gsoap turb1 service method-input-action:	GetBoxFilter_ http://turbulence.pha.jhu.edu/GetBoxFilter
//gsoap turb1 service method-output-action:	GetBoxFilter_ http://turbulence.pha.jhu.edu/GetBoxFilterResponse
int __turb1__GetBoxFilter_(
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,	///< Input parameter
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGS_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGS_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS symmetric tensor for a single vector field. Also, used
                            when two identical fields are specified (e.g. uu or
bb).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // output parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGS_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // output parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGS_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGS_ document
//gsoap turb1 service method-encoding:	GetBoxFilterSGS_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGS_ http://turbulence.pha.jhu.edu/GetBoxFilterSGS
//gsoap turb1 service method-output-action:	GetBoxFilterSGS_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSResponse
int __turb1__GetBoxFilterSGS_(
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,	///< Input parameter
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSsymtensor_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSsymtensor_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS symmetric tensor for a single vector field. Also, used
                            when two identical fields are specified (e.g. uu or
bb).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSsymtensor_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSsymtensor_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSsymtensor_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSsymtensor_ document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSsymtensor_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSsymtensor_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor
//gsoap turb1 service method-output-action:	GetBoxFilterSGSsymtensor_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensorResponse
int __turb1__GetBoxFilterSGSsymtensor_(
    struct _turb1__GetBoxFilterSGSsymtensor* turb1__GetBoxFilterSGSsymtensor,	///< Input parameter
    struct _turb1__GetBoxFilterSGSsymtensorResponse* turb1__GetBoxFilterSGSsymtensorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGStensor_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGStensor_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS tensor for a combination of two vector fields(e.g. ub or ba).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGStensorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGStensor_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGStensor_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,
    // output parameters:
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGStensor_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGStensor_ document
//gsoap turb1 service method-encoding:	GetBoxFilterSGStensor_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGStensor_ http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor
//gsoap turb1 service method-output-action:	GetBoxFilterSGStensor_ http://turbulence.pha.jhu.edu/GetBoxFilterSGStensorResponse
int __turb1__GetBoxFilterSGStensor_(
    struct _turb1__GetBoxFilterSGStensor* turb1__GetBoxFilterSGStensor,	///< Input parameter
    struct _turb1__GetBoxFilterSGStensorResponse* turb1__GetBoxFilterSGStensorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSvector_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSvector_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS vector for a combination of a vector and a scalar field(e.g. up
or bp).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSvectorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSvector_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,
    // output parameters:
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSvector_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,
    // output parameters:
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSvector_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSvector_ document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSvector_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSvector_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector
//gsoap turb1 service method-output-action:	GetBoxFilterSGSvector_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSvectorResponse
int __turb1__GetBoxFilterSGSvector_(
    struct _turb1__GetBoxFilterSGSvector* turb1__GetBoxFilterSGSvector,	///< Input parameter
    struct _turb1__GetBoxFilterSGSvectorResponse* turb1__GetBoxFilterSGSvectorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterSGSscalar_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterSGSscalar_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the SGS scalar for a combination of two scalar fields(e.g. pp or pd).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalarResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterSGSscalar_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,
    // output parameters:
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterSGSscalar_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,
    // output parameters:
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterSGSscalar_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterSGSscalar_ document
//gsoap turb1 service method-encoding:	GetBoxFilterSGSscalar_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterSGSscalar_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar
//gsoap turb1 service method-output-action:	GetBoxFilterSGSscalar_ http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalarResponse
int __turb1__GetBoxFilterSGSscalar_(
    struct _turb1__GetBoxFilterSGSscalar* turb1__GetBoxFilterSGSscalar,	///< Input parameter
    struct _turb1__GetBoxFilterSGSscalarResponse* turb1__GetBoxFilterSGSscalarResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetBoxFilterGradient_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetBoxFilterGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetBoxFilterGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // output parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetBoxFilterGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // output parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetBoxFilterGradient_ SOAP
//gsoap turb1 service method-style:	GetBoxFilterGradient_ document
//gsoap turb1 service method-encoding:	GetBoxFilterGradient_ literal
//gsoap turb1 service method-input-action:	GetBoxFilterGradient_ http://turbulence.pha.jhu.edu/GetBoxFilterGradient
//gsoap turb1 service method-output-action:	GetBoxFilterGradient_ http://turbulence.pha.jhu.edu/GetBoxFilterGradientResponse
int __turb1__GetBoxFilterGradient_(
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,	///< Input parameter
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetLaplacianOfGradient_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetLaplacianOfGradient_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetLaplacianOfGradient_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // output parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetLaplacianOfGradient_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // output parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetLaplacianOfGradient_ SOAP
//gsoap turb1 service method-style:	GetLaplacianOfGradient_ document
//gsoap turb1 service method-encoding:	GetLaplacianOfGradient_ literal
//gsoap turb1 service method-input-action:	GetLaplacianOfGradient_ http://turbulence.pha.jhu.edu/GetLaplacianOfGradient
//gsoap turb1 service method-output-action:	GetLaplacianOfGradient_ http://turbulence.pha.jhu.edu/GetLaplacianOfGradientResponse
int __turb1__GetLaplacianOfGradient_(
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,	///< Input parameter
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetVelocityBatch_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetVelocityBatch_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Spatially interpolate the velocity at a number of points for a given time (allow
batching).

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetVelocityBatchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetVelocityBatch_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // output parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetVelocityBatch_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // output parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetVelocityBatch_ SOAP
//gsoap turb1 service method-style:	GetVelocityBatch_ document
//gsoap turb1 service method-encoding:	GetVelocityBatch_ literal
//gsoap turb1 service method-input-action:	GetVelocityBatch_ http://turbulence.pha.jhu.edu/GetVelocityBatch
//gsoap turb1 service method-output-action:	GetVelocityBatch_ http://turbulence.pha.jhu.edu/GetVelocityBatchResponse
int __turb1__GetVelocityBatch_(
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,	///< Input parameter
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawVelocity_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawVelocity_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw velocity data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawVelocity_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // output parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawVelocity_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // output parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawVelocity_ SOAP
//gsoap turb1 service method-style:	GetRawVelocity_ document
//gsoap turb1 service method-encoding:	GetRawVelocity_ literal
//gsoap turb1 service method-input-action:	GetRawVelocity_ http://turbulence.pha.jhu.edu/GetRawVelocity
//gsoap turb1 service method-output-action:	GetRawVelocity_ http://turbulence.pha.jhu.edu/GetRawVelocityResponse
int __turb1__GetRawVelocity_(
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,	///< Input parameter
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawMagneticField_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawMagneticField_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw magnetic field data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawMagneticField_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // output parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawMagneticField_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // output parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawMagneticField_ SOAP
//gsoap turb1 service method-style:	GetRawMagneticField_ document
//gsoap turb1 service method-encoding:	GetRawMagneticField_ literal
//gsoap turb1 service method-input-action:	GetRawMagneticField_ http://turbulence.pha.jhu.edu/GetRawMagneticField
//gsoap turb1 service method-output-action:	GetRawMagneticField_ http://turbulence.pha.jhu.edu/GetRawMagneticFieldResponse
int __turb1__GetRawMagneticField_(
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,	///< Input parameter
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawVectorPotential_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawVectorPotential_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw vector potential data with the given width cornered at the
specified coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawVectorPotential_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // output parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawVectorPotential_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // output parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawVectorPotential_ SOAP
//gsoap turb1 service method-style:	GetRawVectorPotential_ document
//gsoap turb1 service method-encoding:	GetRawVectorPotential_ literal
//gsoap turb1 service method-input-action:	GetRawVectorPotential_ http://turbulence.pha.jhu.edu/GetRawVectorPotential
//gsoap turb1 service method-output-action:	GetRawVectorPotential_ http://turbulence.pha.jhu.edu/GetRawVectorPotentialResponse
int __turb1__GetRawVectorPotential_(
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,	///< Input parameter
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawPressure_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawPressure_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw pressure data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawPressure_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // output parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawPressure_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // output parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawPressure_ SOAP
//gsoap turb1 service method-style:	GetRawPressure_ document
//gsoap turb1 service method-encoding:	GetRawPressure_ literal
//gsoap turb1 service method-input-action:	GetRawPressure_ http://turbulence.pha.jhu.edu/GetRawPressure
//gsoap turb1 service method-output-action:	GetRawPressure_ http://turbulence.pha.jhu.edu/GetRawPressureResponse
int __turb1__GetRawPressure_(
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,	///< Input parameter
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawDensity_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawDensity_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawDensity_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // output parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawDensity_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // output parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawDensity_ SOAP
//gsoap turb1 service method-style:	GetRawDensity_ document
//gsoap turb1 service method-encoding:	GetRawDensity_ literal
//gsoap turb1 service method-input-action:	GetRawDensity_ http://turbulence.pha.jhu.edu/GetRawDensity
//gsoap turb1 service method-output-action:	GetRawDensity_ http://turbulence.pha.jhu.edu/GetRawDensityResponse
int __turb1__GetRawDensity_(
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,	///< Input parameter
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetRawTemperature_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetRawTemperature_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetRawTemperature"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetRawTemperature"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetRawTemperatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetRawTemperature_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,
    // output parameters:
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetRawTemperature_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,
    // output parameters:
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetRawTemperature_ SOAP
//gsoap turb1 service method-style:	GetRawTemperature_ document
//gsoap turb1 service method-encoding:	GetRawTemperature_ literal
//gsoap turb1 service method-input-action:	GetRawTemperature_ http://turbulence.pha.jhu.edu/GetRawTemperature
//gsoap turb1 service method-output-action:	GetRawTemperature_ http://turbulence.pha.jhu.edu/GetRawTemperatureResponse
int __turb1__GetRawTemperature_(
    struct _turb1__GetRawTemperature*   turb1__GetRawTemperature,	///< Input parameter
    struct _turb1__GetRawTemperatureResponse* turb1__GetRawTemperatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb1__GetAnyCutoutWeb_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb1__GetAnyCutoutWeb_" of service binding "TurbulenceServiceSoap"

/**

Operation details:
Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - Action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWeb"

  - Addressing input action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWeb"

  - Addressing output action: "http://turbulence.pha.jhu.edu/GetAnyCutoutWebResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb1__GetAnyCutoutWeb_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,
    // output parameters:
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb1__GetAnyCutoutWeb_(
    struct soap *soap,
    // input parameters:
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,
    // output parameters:
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse
  );
@endcode

*/

//gsoap turb1 service method-protocol:	GetAnyCutoutWeb_ SOAP
//gsoap turb1 service method-style:	GetAnyCutoutWeb_ document
//gsoap turb1 service method-encoding:	GetAnyCutoutWeb_ literal
//gsoap turb1 service method-input-action:	GetAnyCutoutWeb_ http://turbulence.pha.jhu.edu/GetAnyCutoutWeb
//gsoap turb1 service method-output-action:	GetAnyCutoutWeb_ http://turbulence.pha.jhu.edu/GetAnyCutoutWebResponse
int __turb1__GetAnyCutoutWeb_(
    struct _turb1__GetAnyCutoutWeb*     turb1__GetAnyCutoutWeb,	///< Input parameter
    struct _turb1__GetAnyCutoutWebResponse* turb1__GetAnyCutoutWebResponse	///< Output parameter
);

/**

@page TurbulenceServiceSoap Binding "TurbulenceServiceSoap"

@section TurbulenceServiceSoap_policy_enablers Policy Enablers of Binding  "TurbulenceServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section turb1 Top-level root elements of schema "http://turbulence.pha.jhu.edu/"

  - <turb1:NullOp> @ref _turb1__NullOp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__NullOp(struct soap*, struct _turb1__NullOp*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__NullOp(struct soap*, struct _turb1__NullOp*);
    @endcode

  - <turb1:NullOpResponse> @ref _turb1__NullOpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse*);
    @endcode

  - <turb1:GetVelocity> @ref _turb1__GetVelocity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity*);
    @endcode

  - <turb1:GetVelocityResponse> @ref _turb1__GetVelocityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse*);
    @endcode

  - <turb1:GetMagneticField> @ref _turb1__GetMagneticField
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField*);
    @endcode

  - <turb1:GetMagneticFieldResponse> @ref _turb1__GetMagneticFieldResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse*);
    @endcode

  - <turb1:GetVectorPotential> @ref _turb1__GetVectorPotential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential*);
    @endcode

  - <turb1:GetVectorPotentialResponse> @ref _turb1__GetVectorPotentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse*);
    @endcode

  - <turb1:GetPressure> @ref _turb1__GetPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressure(struct soap*, struct _turb1__GetPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressure(struct soap*, struct _turb1__GetPressure*);
    @endcode

  - <turb1:GetPressureResponse> @ref _turb1__GetPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse*);
    @endcode

  - <turb1:GetDensity> @ref _turb1__GetDensity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensity(struct soap*, struct _turb1__GetDensity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensity(struct soap*, struct _turb1__GetDensity*);
    @endcode

  - <turb1:GetDensityResponse> @ref _turb1__GetDensityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse*);
    @endcode

  - <turb1:GetTemperature> @ref _turb1__GetTemperature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature*);
    @endcode

  - <turb1:GetTemperatureResponse> @ref _turb1__GetTemperatureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse*);
    @endcode

  - <turb1:GetVelocityAndPressure> @ref _turb1__GetVelocityAndPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure*);
    @endcode

  - <turb1:GetVelocityAndPressureResponse> @ref _turb1__GetVelocityAndPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse*);
    @endcode

  - <turb1:GetVelocityAndTemperature> @ref _turb1__GetVelocityAndTemperature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature*);
    @endcode

  - <turb1:GetVelocityAndTemperatureResponse> @ref _turb1__GetVelocityAndTemperatureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse*);
    @endcode

  - <turb1:GetVelocityGradient> @ref _turb1__GetVelocityGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient*);
    @endcode

  - <turb1:GetVelocityGradientResponse> @ref _turb1__GetVelocityGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse*);
    @endcode

  - <turb1:GetMagneticFieldGradient> @ref _turb1__GetMagneticFieldGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient*);
    @endcode

  - <turb1:GetMagneticFieldGradientResponse> @ref _turb1__GetMagneticFieldGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse*);
    @endcode

  - <turb1:GetVectorPotentialGradient> @ref _turb1__GetVectorPotentialGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient*);
    @endcode

  - <turb1:GetVectorPotentialGradientResponse> @ref _turb1__GetVectorPotentialGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse*);
    @endcode

  - <turb1:GetPressureGradient> @ref _turb1__GetPressureGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient*);
    @endcode

  - <turb1:GetPressureGradientResponse> @ref _turb1__GetPressureGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse*);
    @endcode

  - <turb1:GetDensityGradient> @ref _turb1__GetDensityGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient*);
    @endcode

  - <turb1:GetDensityGradientResponse> @ref _turb1__GetDensityGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse*);
    @endcode

  - <turb1:GetTemperatureGradient> @ref _turb1__GetTemperatureGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient*);
    @endcode

  - <turb1:GetTemperatureGradientResponse> @ref _turb1__GetTemperatureGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse*);
    @endcode

  - <turb1:GetVelocityHessian> @ref _turb1__GetVelocityHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian*);
    @endcode

  - <turb1:GetVelocityHessianResponse> @ref _turb1__GetVelocityHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse*);
    @endcode

  - <turb1:GetMagneticHessian> @ref _turb1__GetMagneticHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian*);
    @endcode

  - <turb1:GetMagneticHessianResponse> @ref _turb1__GetMagneticHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse*);
    @endcode

  - <turb1:GetVectorPotentialHessian> @ref _turb1__GetVectorPotentialHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian*);
    @endcode

  - <turb1:GetVectorPotentialHessianResponse> @ref _turb1__GetVectorPotentialHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse*);
    @endcode

  - <turb1:GetPressureHessian> @ref _turb1__GetPressureHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian*);
    @endcode

  - <turb1:GetPressureHessianResponse> @ref _turb1__GetPressureHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse*);
    @endcode

  - <turb1:GetDensityHessian> @ref _turb1__GetDensityHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian*);
    @endcode

  - <turb1:GetDensityHessianResponse> @ref _turb1__GetDensityHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse*);
    @endcode

  - <turb1:GetTemperatureHessian> @ref _turb1__GetTemperatureHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian*);
    @endcode

  - <turb1:GetTemperatureHessianResponse> @ref _turb1__GetTemperatureHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse*);
    @endcode

  - <turb1:GetVelocityLaplacian> @ref _turb1__GetVelocityLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian*);
    @endcode

  - <turb1:GetVelocityLaplacianResponse> @ref _turb1__GetVelocityLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse*);
    @endcode

  - <turb1:GetMagneticFieldLaplacian> @ref _turb1__GetMagneticFieldLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian*);
    @endcode

  - <turb1:GetMagneticFieldLaplacianResponse> @ref _turb1__GetMagneticFieldLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse*);
    @endcode

  - <turb1:GetVectorPotentialLaplacian> @ref _turb1__GetVectorPotentialLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian*);
    @endcode

  - <turb1:GetVectorPotentialLaplacianResponse> @ref _turb1__GetVectorPotentialLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse*);
    @endcode

  - <turb1:GetPosition> @ref _turb1__GetPosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPosition(struct soap*, struct _turb1__GetPosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPosition(struct soap*, struct _turb1__GetPosition*);
    @endcode

  - <turb1:GetPositionResponse> @ref _turb1__GetPositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse*);
    @endcode

  - <turb1:GetThreshold> @ref _turb1__GetThreshold
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold*);
    @endcode

  - <turb1:GetThresholdResponse> @ref _turb1__GetThresholdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse*);
    @endcode

  - <turb1:GetForce> @ref _turb1__GetForce
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetForce(struct soap*, struct _turb1__GetForce*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetForce(struct soap*, struct _turb1__GetForce*);
    @endcode

  - <turb1:GetForceResponse> @ref _turb1__GetForceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse*);
    @endcode

  - <turb1:GetInvariant> @ref _turb1__GetInvariant
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant*);
    @endcode

  - <turb1:GetInvariantResponse> @ref _turb1__GetInvariantResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse*);
    @endcode

  - <turb1:GetBoxFilter> @ref _turb1__GetBoxFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter*);
    @endcode

  - <turb1:GetBoxFilterResponse> @ref _turb1__GetBoxFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse*);
    @endcode

  - <turb1:GetBoxFilterSGS> @ref _turb1__GetBoxFilterSGS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS*);
    @endcode

  - <turb1:GetBoxFilterSGSResponse> @ref _turb1__GetBoxFilterSGSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse*);
    @endcode

  - <turb1:GetBoxFilterSGSsymtensor> @ref _turb1__GetBoxFilterSGSsymtensor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor*);
    @endcode

  - <turb1:GetBoxFilterSGSsymtensorResponse> @ref _turb1__GetBoxFilterSGSsymtensorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse*);
    @endcode

  - <turb1:GetBoxFilterSGStensor> @ref _turb1__GetBoxFilterSGStensor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor*);
    @endcode

  - <turb1:GetBoxFilterSGStensorResponse> @ref _turb1__GetBoxFilterSGStensorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse*);
    @endcode

  - <turb1:GetBoxFilterSGSvector> @ref _turb1__GetBoxFilterSGSvector
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector*);
    @endcode

  - <turb1:GetBoxFilterSGSvectorResponse> @ref _turb1__GetBoxFilterSGSvectorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse*);
    @endcode

  - <turb1:GetBoxFilterSGSscalar> @ref _turb1__GetBoxFilterSGSscalar
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar*);
    @endcode

  - <turb1:GetBoxFilterSGSscalarResponse> @ref _turb1__GetBoxFilterSGSscalarResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse*);
    @endcode

  - <turb1:GetBoxFilterGradient> @ref _turb1__GetBoxFilterGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient*);
    @endcode

  - <turb1:GetBoxFilterGradientResponse> @ref _turb1__GetBoxFilterGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse*);
    @endcode

  - <turb1:GetLaplacianOfGradient> @ref _turb1__GetLaplacianOfGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient*);
    @endcode

  - <turb1:GetLaplacianOfGradientResponse> @ref _turb1__GetLaplacianOfGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse*);
    @endcode

  - <turb1:GetVelocityBatch> @ref _turb1__GetVelocityBatch
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch*);
    @endcode

  - <turb1:GetVelocityBatchResponse> @ref _turb1__GetVelocityBatchResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse*);
    @endcode

  - <turb1:GetRawVelocity> @ref _turb1__GetRawVelocity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity*);
    @endcode

  - <turb1:GetRawVelocityResponse> @ref _turb1__GetRawVelocityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse*);
    @endcode

  - <turb1:GetRawMagneticField> @ref _turb1__GetRawMagneticField
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField*);
    @endcode

  - <turb1:GetRawMagneticFieldResponse> @ref _turb1__GetRawMagneticFieldResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse*);
    @endcode

  - <turb1:GetRawVectorPotential> @ref _turb1__GetRawVectorPotential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential*);
    @endcode

  - <turb1:GetRawVectorPotentialResponse> @ref _turb1__GetRawVectorPotentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse*);
    @endcode

  - <turb1:GetRawPressure> @ref _turb1__GetRawPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure*);
    @endcode

  - <turb1:GetRawPressureResponse> @ref _turb1__GetRawPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse*);
    @endcode

  - <turb1:GetRawDensity> @ref _turb1__GetRawDensity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity*);
    @endcode

  - <turb1:GetRawDensityResponse> @ref _turb1__GetRawDensityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse*);
    @endcode

  - <turb1:GetRawTemperature> @ref _turb1__GetRawTemperature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature*);
    @endcode

  - <turb1:GetRawTemperatureResponse> @ref _turb1__GetRawTemperatureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse*);
    @endcode

  - <turb1:GetAnyCutoutWeb> @ref _turb1__GetAnyCutoutWeb
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb*);
    @endcode

  - <turb1:GetAnyCutoutWebResponse> @ref _turb1__GetAnyCutoutWebResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse*);
    @endcode

*/

/* End of TurbulenceService.h */
